import { global } from './global';
const postWrapper = document.querySelector('ul.posts');
const tagWrapper = document.querySelector('ul.tags');
const dataWrapper = document.querySelector('pre.data');
let tags = [];
let arrTags = [];
let posts;

const getPosts = () => {
    let limit = 20;
    const options = {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json'
        }
    };
    const retrieveMore = (offset) => {
        const url = new URL(`https://${global.apiBaseURL}${global.apiBlog}/posts?offset=${offset}`);
        url.searchParams.set('api_key', global.oAuthConsumerKey);
        let template;
        fetch(url, options)
            .then((response) => response.json())
            .then((response) => {
                if (response) {
                    let index = 0;
                    const postLength = response.response.posts.length;
                    const totalPosts = response.response.total_posts;
                    while (index < 3) {
                        posts = response.response.posts;
                        // console.log(postLength);
                        // console.log(totalPosts);
                        console.log(index);
                        if (postWrapper) {
                            posts.forEach((item) => {
                                const href = item.post_url;
                                template += `<li class="el el-2"><a href=${href} target="_blank">${item.body}</a></li>`;
                                postWrapper.insertAdjacentHTML('beforeend', template);
                            });
                        }
                        posts.map((item) => item.tags.map((tag) => tags.push(tag.toLowerCase())));
                        arrTags = [...new Set(tags.sort())];
                        if (tagWrapper) {
                            arrTags.forEach((item) => {
                                const itemHREF = item.replaceAll(' ', '+');
                                const template = `<li><a href=${global.blogURL}/tagged/${itemHREF} target="_blank">${item}</li>`;
                                tagWrapper.innerHTML += template;
                            });
                        }
                        if (dataWrapper) {
                            dataWrapper.textContent = JSON.stringify(posts, null, 4);
                        }
                        index++;
                    }
                    if (totalPosts >= offset && postLength !== 0) {
                        retrieveMore(offset + limit);
                    }
                }
            });
    };
    retrieveMore(0);
};

export { getPosts };
